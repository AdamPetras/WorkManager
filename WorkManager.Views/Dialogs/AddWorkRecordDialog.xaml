<?xml version="1.0" encoding="UTF-8"?>
<Frame xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:resources="clr-namespace:WorkManager.Views.Resources;assembly=WorkManager.Views"
             xmlns:dialogs="clr-namespace:WorkManager.ViewModels.Dialogs;assembly=WorkManager.ViewModels"
             xmlns:prism="http://prismlibrary.com"
             xmlns:enums="clr-namespace:WorkManager.DAL.Enums;assembly=WorkManager.DAL"
             xmlns:extensions="clr-namespace:WorkManager.Extensions;assembly=WorkManager.Extensions"
             xmlns:controls="clr-namespace:WorkManager.Views.Controls;assembly=WorkManager.Views"
             prism:DialogLayout.RelativeWidthRequest="0.8"
             prism:DialogLayout.CloseOnBackgroundTapped="True"
             x:DataType="dialogs:AddWorkRecordDialogViewModel"
             x:Class="WorkManager.Views.Dialogs.AddWorkRecordDialog">
    <Frame.Resources>
        <ResourceDictionary Source="../Styles/SharedStyles.xaml"></ResourceDictionary>
    </Frame.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="0" Text="{x:Static resources:TranslateDialogsSR.ActualDateTime}" VerticalTextAlignment="Center"></Label>
        <DatePicker Grid.Row="0" Grid.Column="1" Date="{Binding SelectedDate}"></DatePicker>
        <Label Grid.Row="1" Grid.Column="0" Text="{x:Static resources:TranslateDialogsSR.Description}"  VerticalTextAlignment="Center"></Label>
        <Entry Grid.Row="1" Grid.Column="1" Text="{Binding Description}" Keyboard="Chat"></Entry>
        <Label Grid.Row="2" Grid.Column="0" Text="{x:Static resources:TranslateDialogsSR.WorkType}" VerticalTextAlignment="Center"></Label>
        <Picker Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Source ={extensions:EnumBindingSource {x:Type enums:EWorkType}}}" SelectedItem="{Binding SelectedWorkType}"></Picker>
        <Label Grid.Row="3" Grid.Column="0" Text="{x:Static resources:TranslateDialogsSR.WorkTime}" IsVisible="{Binding SelectedWorkType, Converter={StaticResource HasFlagToVisibilityConverter}, ConverterParameter={x:Static enums:EWorkType.Time}}" VerticalTextAlignment="Center"></Label>
        <TimePicker Grid.Row="3" Grid.Column="1" Time="{Binding WorkTime}" Format="HH:mm" IsVisible="{Binding SelectedWorkType, Converter={StaticResource HasFlagToVisibilityConverter}, ConverterParameter={x:Static enums:EWorkType.Time}}"></TimePicker>
        <Label Grid.Row="4" Grid.Column="0" Text="{x:Static resources:TranslateDialogsSR.PricePerHour}" IsVisible="{Binding SelectedWorkType, Converter={StaticResource HasFlagToVisibilityConverter}, ConverterParameter={x:Static enums:EWorkType.Time}}" VerticalTextAlignment="Center"></Label>
        <Entry Grid.Row="4" Grid.Column="1" Text="{Binding PricePerHour}" Keyboard="Numeric" IsVisible="{Binding SelectedWorkType, Converter={StaticResource HasFlagToVisibilityConverter}, ConverterParameter={x:Static enums:EWorkType.Time}}"></Entry>
        <Label Grid.Row="5" Grid.Column="0" Text="{x:Static resources:TranslateDialogsSR.Pieces}" IsVisible="{Binding SelectedWorkType, Converter={StaticResource HasFlagToVisibilityConverter}, ConverterParameter={x:Static enums:EWorkType.Piece}}" VerticalTextAlignment="Center"></Label>
        <Entry Grid.Row="5" Grid.Column="1" Text="{Binding Pieces}" Keyboard="Numeric" IsVisible="{Binding SelectedWorkType, Converter={StaticResource HasFlagToVisibilityConverter}, ConverterParameter={x:Static enums:EWorkType.Piece}}"></Entry>
        <Label Grid.Row="6" Grid.Column="0" Text="{x:Static resources:TranslateDialogsSR.PricePerPiece}" IsVisible="{Binding SelectedWorkType, Converter={StaticResource HasFlagToVisibilityConverter}, ConverterParameter={x:Static enums:EWorkType.Piece}}" VerticalTextAlignment="Center"></Label>
        <Entry Grid.Row="6" Grid.Column="1" Text="{Binding PricePerPiece}" Keyboard="Numeric" IsVisible="{Binding SelectedWorkType, Converter={StaticResource HasFlagToVisibilityConverter}, ConverterParameter={x:Static enums:EWorkType.Piece}}"></Entry>
        <Button Grid.Row="7" Grid.Column="0" Text="{x:Static resources:TranslateDialogsSR.Cancel}" Command="{Binding CancelCommand}"></Button>
        <Button Grid.Row="7" Grid.Column="1" Text="{x:Static resources:TranslateDialogsSR.Confirm}" Command="{Binding ConfirmCommand}" IsVisible="{Binding IsBusy, Converter={StaticResource NegateBooleanConverter}}"></Button>
        <controls:Loading Grid.Row="7" Grid.Column="1" IsLoadingVisible="{Binding IsBusy}" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand"></controls:Loading>
    </Grid>
</Frame>